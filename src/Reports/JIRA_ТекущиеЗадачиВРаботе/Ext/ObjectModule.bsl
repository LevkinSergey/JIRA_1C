
Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = ложь;
	
	НастройкиПоУмолчанию = КомпоновщикНастроек.ПолучитьНастройки();
	УстановитьУсловноеОформление(НастройкиПоУмолчанию);
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, НастройкиПоУмолчанию, ДанныеРасшифровки);
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки,,ДанныеРасшифровки);
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки, Истина);
	
	Для Кол = 2 По ДокументРезультат.ШиринаТаблицы Цикл
		ШиринаКолонки = 0;
		Для Стр = 1 По ДокументРезультат.ВысотаТаблицы Цикл
			Область = ДокументРезультат.Область("R"+Формат(Стр,"ЧГ=0")+"C"+Формат(Кол,"ЧГ=0"));
			Область.ШиринаКолонки = 10;
		Конеццикла;
	КонецЦикла;	
	
КонецПроцедуры

Процедура УстановитьУсловноеОформление(НастройкиПоУмолчанию)
	
	//НастройкиПоУмолчанию.УсловноеОформление.Элементы.Очистить();
	
	//Установка градиента для колонки
	НачальныйЦвет = новый Цвет(100, 190, 123);
	КонечныйЦвет = Новый Цвет(248, 105, 107);
	
	МаксимальноеЗначение = 50;
	
	КоличествоГрадаций = МаксимальноеЗначение;
	
	ШагКрасного = (КонечныйЦвет.Красный - НачальныйЦвет.Красный) / КоличествоГрадаций * 2;
	ШагЗеленого = (КонечныйЦвет.Зеленый - НачальныйЦвет.Зеленый) / КоличествоГрадаций * 2;
	//ШагСинего = (КонечныйЦвет.Синий - НачальныйЦвет.Синий) / КоличествоГрадаций;
	
	ТекКрасный = НачальныйЦвет.Красный;
	ТекЗеленый = НачальныйЦвет.Зеленый;
	ТекСиний = НачальныйЦвет.Синий;
	
	Для ЗначениеРесурса = 0 по МаксимальноеЗначение цикл
		
		Если ТекКрасный + ШагКрасного >= 255 Тогда 
			ТекЗеленый = ТекЗеленый + ШагЗеленого;
		Иначе
			ТекКрасный = ТекКрасный + ШагКрасного;
		КонецЕсли;
		
		НовоеУсловноеОформление = НастройкиПоУмолчанию.УсловноеОформление.Элементы.Добавить();
		НовоеУсловноеОформление.Использование = Истина;
		НовыйОтбор = НовоеУсловноеОформление.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		НовыйОтбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ДнейПребыванияВСтатусе");
		Если ЗначениеРесурса = МаксимальноеЗначение Тогда
			НовыйОтбор.ВидСравнения = ВидСравненияКомпоновкиДанных.БольшеИлиРавно;
		Иначе
			НовыйОтбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		КонецЕсли;
		НовыйОтбор.ПравоеЗначение = ЗначениеРесурса;
		НовоеОформление = НовоеУсловноеОформление.Оформление.Элементы.Найти("ЦветФона");
		НовоеОформление.Значение = Новый Цвет(Окр(ТекКрасный,0), Окр(ТекЗеленый,0), Окр(ТекСиний,0));
		НовоеОформление.Использование = Истина;
		ПолеОформления = НовоеУсловноеОформление.Поля.Элементы.Добавить();
		ПолеОформления.Поле = Новый ПолеКомпоновкиДанных("ДнейПребыванияВСтатусе");
		ПолеОформления.Использование = Истина;
		
		НовоеУсловноеОформление.ИспользоватьВГруппировке = ИспользованиеУсловногоОформленияКомпоновкиДанных.Использовать;
		НовоеУсловноеОформление.ИспользоватьВЗаголовке = ИспользованиеУсловногоОформленияКомпоновкиДанных.НеИспользовать;
		НовоеУсловноеОформление.ИспользоватьВЗаголовкеПолей = ИспользованиеУсловногоОформленияКомпоновкиДанных.НеИспользовать;
		НовоеУсловноеОформление.ИспользоватьВИерархическойГруппировке = ИспользованиеУсловногоОформленияКомпоновкиДанных.НеИспользовать;
		НовоеУсловноеОформление.ИспользоватьВОбщемИтоге = ИспользованиеУсловногоОформленияКомпоновкиДанных.НеИспользовать;
		НовоеУсловноеОформление.ИспользоватьВОтборе = ИспользованиеУсловногоОформленияКомпоновкиДанных.НеИспользовать;
		НовоеУсловноеОформление.ИспользоватьВПараметрах = ИспользованиеУсловногоОформленияКомпоновкиДанных.НеИспользовать;
		
	КонецЦикла;
	
	
	
	
КонецПроцедуры

